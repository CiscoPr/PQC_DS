FALCON tb tem rejection sampling, however:
- turns the sk into a tree structure:
    /*
        * Compute a signature over the provided hashed message (hm); the
        * signature value is one short vector. This function uses an
        * expanded key (as generated by Zf(expand_privkey)()).
        *
        * The sig[] and hm[] buffers may overlap.
        *
        * On successful output, the start of the tmp[] buffer contains the s1
        * vector (as int16_t elements).
        *
        * The minimal size (in bytes) of tmp[] is 48*2^logn bytes.
        *
        * tmp[] must have 64-bit alignment.
        * This function uses floating-point rounding (see set_fpu_cw()).
        */
        void Zf(sign_tree)(int16_t *sig, inner_shake256_context *rng,
            const fpr *restrict expanded_key,
            const uint16_t *hm, unsigned logn, uint8_t *tmp);

After sampling the vector, it checks the length of the entire vector and, if the total length is larger than a preset limit, Falcon rejects that sample and runs the FFT sampler against
Because of how discrete Gaussians concentrate in higher dimensions, only a very small fraction of samples exceed the length bound.
Because rejections are rare, most signatures happen in a single pass. But each rejection costs extra FFT work, which is heavier than Dilithium‚Äôs extra small‚Äêvector work.
"We call sig the tailcut rate of signatures, because the expected value of ‚à•(s1, s2)‚à• is 
p
2n; any signature
larger than this expected value by a factor more than sig is rejected. By applying [Lyu12, Lemma 4.4,
Item 3], the probability that a sampled signature is larger than  (hence that the signing procedure has to
restart) is upper bounded as follows:"
- corrigir an√°lise do SPHINCS+
- reescrever SOTA
- gr√°ficos com rejei√ß√µe: retirar keygen e verify e diminuir o intervalo ‚úÖ
- gr√°ficos sem rejei√ß√µes: tirar as rejei√ß√µes e s√≥ analisar o sign, keygen e verify ‚úÖ
- gr√°fico de barras deitados com as m√©dias de tempo de cada processo de cada solu√ß√£o ‚úÖ
- perceber o porqu√™ do paper "Performance Analysis of Post-Quantum Cryptography Algorithms for Digital Signature" ter medidas diferentes para o Falcon
- equiparar o meu trabalho com os dos papers, assim como tamb√©m as suas igualdades e diferen√ßas e vantagens do meu